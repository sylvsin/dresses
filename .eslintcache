[{"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\index.tsx":"1","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\reportWebVitals.ts":"2","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\App.tsx":"3","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\DressList\\DressList.tsx":"4","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\DressItem\\DressItem.tsx":"5","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\Cart\\Cart.tsx":"6","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\Administration\\Admin.tsx":"7","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\Filter\\Filter.tsx":"8","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\context\\DressContext.tsx":"9","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\Data.ts":"10","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\util.ts":"11","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\context\\AppContext.tsx":"12"},{"size":500,"mtime":1606463604113,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1606463604113,"results":"15","hashOfConfig":"14"},{"size":3985,"mtime":1611784082513,"results":"16","hashOfConfig":"14"},{"size":892,"mtime":1611664143931,"results":"17","hashOfConfig":"14"},{"size":3018,"mtime":1611524860924,"results":"18","hashOfConfig":"14"},{"size":8047,"mtime":1611784082519,"results":"19","hashOfConfig":"14"},{"size":206,"mtime":1611784082517,"results":"20","hashOfConfig":"14"},{"size":2015,"mtime":1611664143933,"results":"21","hashOfConfig":"14"},{"size":5429,"mtime":1611784082520,"results":"22","hashOfConfig":"14"},{"size":2902,"mtime":1611334376157,"results":"23","hashOfConfig":"14"},{"size":121,"mtime":1611334376170,"results":"24","hashOfConfig":"14"},{"size":975,"mtime":1611664143934,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1er4by6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\index.tsx",[],["55","56"],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\reportWebVitals.ts",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\App.tsx",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\DressList\\DressList.tsx",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\DressItem\\DressItem.tsx",["57"],"import React, { useContext, useState } from 'react';\r\nimport {DressContext, Dress } from '../../context/DressContext';\r\nimport formatCurrency  from '../../util';\r\nimport './Product.css';\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport Modal from 'react-modal'\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : \"21.5rem\",\r\n    left                  : \"52rem\",\r\n    right                 : \"54rem\",\r\n    bottom                : \"auto\",\r\n    width                 : \"60%\",\r\n    height                : \"50%\",\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nconst DressItem: React.FC<{dress: Dress}> = ({dress}) => {\r\n  const {addToCart} = useContext(DressContext);\r\n  const [ product, setProduct ] = useState(null);\r\n  const [modalState, setModalState] = useState(false);\r\n\r\n  const isOpen = (product: any) => {\r\n    setProduct(product);\r\n  };\r\n\r\n  const closeModal = ():void => {\r\n      setProduct(product);\r\n      setModalState(false)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"product\">\r\n      <Fade direction=\"down\">\r\n        <a href=\"#\" onClick={(product: any) => {isOpen(product);\r\n            setModalState(true)}}\r\n        >\r\n          <img src={dress.image} alt={dress.title} />\r\n          <p>\r\n              { dress.title }\r\n          </p>\r\n        </a>\r\n\r\n        <div className=\"product-price\">\r\n            <div>\r\n                { formatCurrency(dress.price) }\r\n            </div>\r\n            \r\n            <button onClick={() => addToCart(dress)}>Add To Cart</button>\r\n        </div>\r\n      </Fade>\r\n      \r\n      {\r\n        product && (\r\n        <Modal\r\n          isOpen={modalState}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n                \r\n          <button className=\"close-modal\" onClick={closeModal}>\r\n            x\r\n          </button>\r\n          <div className=\"product-details\">\r\n            <img src={dress.image} alt={dress.title}></img>\r\n            <div className=\"product-details-description\">\r\n              <p>\r\n                <strong>{dress.title}</strong>\r\n              </p>\r\n              <p>{dress.description}</p>\r\n              <p>\r\n                Avaiable Sizes:{\" \"}\r\n                {dress.availableSizes.map((x, i) => (\r\n                  <span key={i}>\r\n                    {\" \"}\r\n                    <button className=\"button\">{x}</button>\r\n                  </span>\r\n                ))}\r\n              </p>\r\n              <div className=\"product-price\">\r\n                <div>{formatCurrency(dress.price)}</div>\r\n                <button\r\n                  className=\"button primary\"\r\n                  onClick={() => {\r\n                    addToCart(dress);\r\n                    closeModal();\r\n                  }}\r\n                >\r\n                  Add To Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        )\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DressItem\r\n","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\Cart\\Cart.tsx",["58","59"],"import React, { ChangeEvent, useContext, useState } from 'react';\r\nimport './Cart.css'\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport Modal from 'react-modal'\r\nimport { DressContext } from '../../context/DressContext';\r\nimport formatCurrency from '../../util';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : \"21.5rem\",\r\n    left                  : \"52rem\",\r\n    right                 : \"54rem\",\r\n    bottom                : \"auto\",\r\n    width                 : \"60%\",\r\n    height                : \"50%\",\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\nconst Cart: React.FC = () => {\r\n  const {cartItems, addToCart, decrementQuantity, removeFromCart, order, createOrderItems} = useContext(DressContext);\r\n  const [showCheckout, setShowCheckout] = useState<Boolean>(false);\r\n  const [_id, set_id] = useState<string>();\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [createdAt, setCreatedAt] = useState<Date>();\r\n  const [ product, setProduct ] = useState(null);\r\n  const [modalState, setModalState] = useState(false);\r\n\r\n  const isOpen = (product: any) => {\r\n    setProduct(product);\r\n  };\r\n\r\n  const closeModal = ():void => {\r\n      setProduct(product);\r\n      setModalState(false)\r\n  }\r\n\r\n  const createOrder = (e: { preventDefault: () => void; }) => {\r\n    e.preventDefault();\r\n    createOrderItems({\r\n        _id: _id,\r\n        name: name,\r\n        email: email,\r\n        address: address,\r\n        createdAt: createdAt,\r\n        cartItems: cartItems,\r\n        total: cartItems.reduce((a, c) => a + (c.price*c.count), 0),\r\n    });  \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cart\">\r\n        <div className=\"cart-table\">\r\n          <div className=\"row cart-header\"> \r\n            <span className=\"center\">Product Image</span>\r\n            <span className=\"center\">Product Title</span>\r\n            <span className=\"center\">Product Action</span>\r\n            <span className=\"center\">Product Price</span>\r\n            <span className=\"center\">Increase Product</span>\r\n            <span className=\"center\">Decrease Product</span>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n          product && (\r\n              <Modal \r\n                  isOpen={modalState}\r\n                  onRequestClose={closeModal}\r\n                  style={customStyles}\r\n                  contentLabel=\"Example Modal\"\r\n              >\r\n                  <button className=\"close-modal\" onClick={closeModal}>x</button>\r\n                  <div className=\"order-details\">\r\n                      <h3 className=\"success-message\">Your order has been placed.</h3>\r\n                      Order: <strong> {order?._id}</strong>\r\n                      <ul>\r\n                          <li>\r\n                              <div>Name:</div>\r\n                              <div>{order?.name}</div>\r\n                          </li>\r\n                          <li>\r\n                              <div>Email:</div>\r\n                              <div>{order?.email}</div>\r\n                          </li>\r\n                          <li>\r\n                              <div>Address:</div>\r\n                              <div>{order?.address}</div>\r\n                          </li>\r\n                          <li>\r\n                              <div>Date:</div>\r\n                              <div>{order?.createdAt}</div>\r\n                          </li>\r\n                          <li>\r\n                              <div>Total:</div>\r\n                              <div>{formatCurrency(order?.total??0)}</div>\r\n                          </li>\r\n                          <li>\r\n                              <div>Cart Items:</div>\r\n                              <div>{order?.cartItems.map((x, i) => {\r\n                                  return <div key={x._id}>{x.count} {\" x \"} {x.title}</div>\r\n                              })}</div>\r\n                          </li>\r\n                      </ul>\r\n                  </div>\r\n              </Modal>\r\n          )\r\n        }\r\n\r\n\r\n        <Fade direction=\"left\">\r\n              {cartItems.map((item, i) => {\r\n                return(\r\n                  <div className=\"row\" key={`${item._id}-${item.title}-${i}`}>\r\n                        <div className=\"center\">\r\n                          <img src={item.image} alt={item.title} height=\"50px\" width=\"50px\"/> {\" \"}\r\n                        </div>\r\n                          <span className=\"center\">{item.title}</span>\r\n                          <button\r\n                            onClick={() => removeFromCart(item._id)}\r\n                            className=\"remove-from-cart-button\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        <span className=\"center\">{item.count} x {formatCurrency(item.price)}</span>\r\n                        <span onClick={() => addToCart(item)} className=\"center\"><button className=\"quantity\">+</button></span>\r\n                        <span  onClick={() => decrementQuantity(item)} className=\"center\"><button className=\"quantity\">-</button></span>  \r\n                  </div>\r\n                )\r\n              })}\r\n          \r\n            <div className=\"row\">\r\n                <span onClick={() => {setShowCheckout(true)}} className=\"proceed-button\">Order</span>\r\n                <span className=\"center\">\r\n                    Total: {\" \"}\r\n                    <strong className=\"amount\">\r\n                        {\r\n                            formatCurrency(cartItems.reduce((a, c) => a + c.price * c.count, 0))\r\n                        }\r\n                    </strong>\r\n                </span>\r\n                <span className=\"center\">\r\n                  <a href=\"/\"><button className=\"add-new-product\">Add New Product</button></a>\r\n                </span>\r\n            </div>\r\n          </Fade>\r\n      </div>\r\n\r\n      <div>  \r\n        {\r\n          showCheckout && (\r\n            <Fade direction=\"right\">\r\n              <div className=\"form-container\">\r\n                <form onSubmit={createOrder}>\r\n                  \r\n                  <ul>\r\n                      <li>\r\n                          <label>Email</label>\r\n                          <input\r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            required\r\n                            value={email} onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)} \r\n                          ></input>\r\n                      </li>\r\n                      <li>\r\n                          <label>Name</label>\r\n                          <input \r\n                            name=\"name\"\r\n                            type=\"text\" \r\n                            required\r\n                            value={name} onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\r\n                          ></input>\r\n                      </li>\r\n                      <li>\r\n                          <label>Address</label>\r\n                          <input \r\n                            name=\"address\"\r\n                            type=\"text\" \r\n                            required\r\n                            value={address} onChange={(e: ChangeEvent<HTMLInputElement>) => setAddress(e.target.value)}\r\n                          ></input>\r\n                      </li>\r\n                      <li>\r\n                          <button className=\"proceed-button\" type=\"submit\" style={{paddingRight: \"14rem\", fontSize: \"20px\"}}\r\n                            onClick={(product: any) => {isOpen(product);\r\n                              setModalState(true)}}   \r\n                          >\r\n                              Submit\r\n                          </button>\r\n                      </li>\r\n                  </ul>\r\n\r\n                </form>\r\n              </div>\r\n            </Fade>\r\n              \r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\Administration\\Admin.tsx",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\components\\Filter\\Filter.tsx",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\context\\DressContext.tsx",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\Data.ts",[],["60","61"],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\util.ts",[],"C:\\Users\\lubwi\\OneDrive\\Skrivbord\\REACT\\EXAMENSARBETE\\dresses\\src\\context\\AppContext.tsx",["62","63"],"import axios, { AxiosInstance } from \"axios\";\r\nimport React, { createContext, useCallback, useState, useEffect } from \"react\";\r\nimport { Dress } from \"./DressContext\";\r\n\r\nexport interface AppConfig {\r\n  api?: AxiosInstance;\r\n  products: Dress[];\r\n}\r\n\r\ninterface Props {\r\n  baseUrl: string\r\n}\r\n\r\nexport const AppContext = createContext<AppConfig>({\r\n    products: []\r\n});\r\n\r\nexport const AppContextProvider: React.FC<Props> = ({ baseUrl, children }) => {\r\n  const api = axios.create({\r\n    baseURL: baseUrl,\r\n  });\r\n\r\n  const [products, setProducts] = useState<Dress[]>([]);\r\n  \r\n  const fetchProduct = useCallback(() => {\r\n    if (api) {\r\n      api\r\n        .get(\"products\")\r\n        .then((response) => {\r\n          return response.data;\r\n        })\r\n        .then((data) => {\r\n          setProducts(data);\r\n          console.log(data);\r\n        });\r\n    }\r\n  }, [api] );\r\n\r\n  return <AppContext.Provider value={{ api, products }}>{children}</AppContext.Provider>;\r\n};\r\n\r\n\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":37,"column":9,"nodeType":"70","endLine":39,"endColumn":10},{"ruleId":"71","severity":1,"message":"72","line":22,"column":15,"nodeType":"73","messageId":"74","endLine":22,"endColumn":21},{"ruleId":"71","severity":1,"message":"75","line":26,"column":21,"nodeType":"73","messageId":"74","endLine":26,"endColumn":33},{"ruleId":"64","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"71","severity":1,"message":"78","line":2,"column":55,"nodeType":"73","messageId":"74","endLine":2,"endColumn":64},{"ruleId":"71","severity":1,"message":"79","line":25,"column":9,"nodeType":"73","messageId":"74","endLine":25,"endColumn":21},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'set_id' is assigned a value but never used.","Identifier","unusedVar","'setCreatedAt' is assigned a value but never used.",["80"],["81"],"'useEffect' is defined but never used.","'fetchProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]